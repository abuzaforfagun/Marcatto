// <auto-generated />
using System;
using Marcatto.Preseistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Marcatto.Migrations
{
    [DbContext(typeof(MarcattoDbContext))]
    [Migration("20190502190601_AddTable_Expense")]
    partial class AddTable_Expense
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Marcatto.Model.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber");

                    b.Property<DateTime>("AddedDate");

                    b.Property<bool>("IsTerminated");

                    b.Property<string>("Name");

                    b.Property<DateTime?>("TerminatedDate");

                    b.HasKey("Id");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("Marcatto.Model.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDateTime");

                    b.Property<double>("Amount");

                    b.Property<int?>("BankAccountId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<int>("PaymentOptionId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("PaymentOptionId");

                    b.ToTable("Expense");
                });

            modelBuilder.Entity("Marcatto.Model.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDateTime");

                    b.Property<double>("Amount");

                    b.Property<int?>("BankAccountId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<int>("PaymentOptionId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("PaymentOptionId");

                    b.ToTable("Income");
                });

            modelBuilder.Entity("Marcatto.Model.PaymentOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("PaymentOptions");
                });

            modelBuilder.Entity("Marcatto.Model.Expense", b =>
                {
                    b.HasOne("Marcatto.Model.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountId");

                    b.HasOne("Marcatto.Model.PaymentOption", "PaymentOption")
                        .WithMany()
                        .HasForeignKey("PaymentOptionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marcatto.Model.Income", b =>
                {
                    b.HasOne("Marcatto.Model.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountId");

                    b.HasOne("Marcatto.Model.PaymentOption", "PaymentOption")
                        .WithMany()
                        .HasForeignKey("PaymentOptionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
